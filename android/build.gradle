buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
    }
}

apply plugin: 'com.android.library'

def DEFAULT_COMPILE_SDK_VERSION = 27
def DEFAULT_BUILD_TOOLS_VERSION = "27.0.3"
def DEFAULT_TARGET_SDK_VERSION = 27
def DEFAULT_SUPPORT_LIB_VERSION = "27.1.1"

android {
    compileSdkVersion rootProject.hasProperty('compileSdkVersion') ? rootProject.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION
    buildToolsVersion rootProject.hasProperty('buildToolsVersion') ? rootProject.buildToolsVersion : DEFAULT_BUILD_TOOLS_VERSION
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.hasProperty('targetSdkVersion') ? rootProject.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
        versionCode 2
        versionName "0.2.1"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
    productFlavors {
    }
    lintOptions {
        disable 'GradleCompatible'
        abortOnError false
        warning 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            aidl.srcDirs = ['src/main/java']
        }
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()

    def found = false
    def parentDir = rootProject.projectDir
    def androidSourcesName = 'React Native sources'
    def androidPrebuiltBinaryName = 'React Native prebuilt binary'

    1.upto(4, {
        if (found) return true
        parentDir = parentDir.parentFile

        // Running React Native from sources locally or for ExpoKit
        def androidSourcesDir = new File(
                parentDir,
                'node_modules/react-native'
        )

        // Official releases of React Native come with a prebuilt version of Android sources
        // in ./android, e.g. react-native/android/**/react-native-0.57.1.aar
        def androidPrebuiltBinaryDir = new File(
                parentDir,
                'node_modules/react-native/android'
        )

        if (androidPrebuiltBinaryDir.exists()) {
            maven {
                url androidPrebuiltBinaryDir.toString()
                name androidPrebuiltBinaryName
            }

            println "${project.name}: using ${androidPrebuiltBinaryName} from ${androidPrebuiltBinaryDir.toString()}"
            found = true
        } else if (androidSourcesDir.exists()) {
            maven {
                url androidSourcesDir.toString()
                name androidSourcesName
            }

            println "${project.name}: using ${androidSourcesName} from ${androidSourcesDir.toString()}"
            found = true
        }
    })

    if (!found) {
        throw new GradleException(
                "${project.name}: unable to locate React Native android sources or prebuilt binary. " +
                        "Ensure you have you installed React Native as a dependency in your project and try again."
        )
    }
}

def supportVersion = rootProject.hasProperty('supportLibVersion') ? rootProject.supportLibVersion : DEFAULT_SUPPORT_LIB_VERSION

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testCompile 'junit:junit:4.12'
    implementation "com.facebook.react:react-native:+" // From node_modules
    implementation 'com.koushikdutta.async:androidasync:2.+'
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}